@page
@model LoginModel
@attribute [Xenial.Identity.Quickstart.SecurityHeaders]
@inject IStringLocalizer L
@{
    ViewData["Title"] = @L["Login"];
    Layout = "/Views/Shared/_LayoutWithoutSide.cshtml";
}

<div class="login-page">
    <div class="login-page-tabs">
        <input type="radio" id="tab1" name="tab-control" @(Model.SelectedPage == "login" ? "checked" : "")>
        @if (Model.AllowRegister)
        {
            <input type="radio" id="tab2" name="tab-control" @(Model.SelectedPage == "register" ? "checked" : "")>
        }
        <ul class="login-page-tabs__list">
            <li class="login-page-tabs__list-item" title="@L["Login"]">
                <label class="login-page-tabs__list-item-label" for="tab1" role="button">
                    <i class="fas fa-sign-in-alt"></i> <span>@L["Login"]</span>
                </label>
            </li>
            @if (Model.AllowRegister)
            {
                <li class="login-page-tabs__list-item" title="@L["Register a new account"]">
                    <label class="login-page-tabs__list-item-label" for="tab2" role="button">
                        <i class="fas fa-user-plus"></i> <span>@L["Signup"]</span>
                    </label>
                </li>
            }
        </ul>
        @if (Model.AllowRegister)
        {
            <div class="login-page-tabs__slider"><div class="indicator"></div></div>
        }
        <div class="login-page-tabs__content">
            <section class="login-form">
                <h2>@L["Login"]</h2>
                @if (Model.AllowExternalProviders)
                {
                    @if (Model.ExternalLogins.Any())
                    {
                        <form id="external-account" asp-page="./ExternalLogin" asp-route-returnUrl="@Model.ReturnUrl" method="post" class="form-horizontal">
                            <ul class="login-page__providers">
                                @foreach (var provider in Model.ExternalLogins)
                                {
                                    <li class="login-page__providers-item">
                                        <button type="submit" class="login-page__providers-item-button @provider.Name.ToLower()" name="provider" value="@provider.Name" title="@L["Log in using your {0} account", @provider.DisplayName]">@provider.DisplayName</button>
                                    </li>
                                }
                            </ul>
                        </form>
                        <span class="login-page-or">@L["or"]</span>
                    }
                }
                @if (Model.LoginType == Xenial.Identity.Models.LoginTypes.Email)
                {
                    <form method="post" class="xenial-form" asp-page-handler="login">
                        <ul class="xenial-form__list">
                            <li class="xenial-form__list-item">
                                <input type="hidden" asp-for="ReturnUrl" />
                                <label asp-for="LoginEmailInput.Email">@L["Email"]</label>
                                <input placeholder="@L["Email"]" asp-for="LoginEmailInput.Email" autofocus type="email">
                                <span asp-validation-for="LoginEmailInput.Email" class="text-danger"></span>
                            </li>
                            <li class="xenial-form__list-item">
                                <label asp-for="LoginEmailInput.Password">@L["Password"]</label>
                                <input type="password" placeholder="Password" asp-for="LoginEmailInput.Password" autocomplete="off">
                                <span asp-validation-for="LoginEmailInput.Password" class="text-danger"></span>
                            </li>
                            <li class="xenial-form__list-item">
                                <label asp-for="LoginEmailInput.RememberMe">@L["Remember me?"]</label>
                                <input class="toggle" asp-for="LoginEmailInput.RememberMe">
                                <span asp-validation-for="LoginEmailInput.RememberMe" class="text-danger"></span>
                            </li>
                            <li class="xenial-form__list-item">
                                <a asp-page="ForgotPassword">@L["Forgot password?"]</a>
                            </li>
                            <li class="xenial-form__list-item">
                                <button class="xenial-form__list-item-submit" name="button" value="login">@L["Login"]</button>
                            </li>
                        </ul>
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    </form>
                }
                else if (Model.LoginType == Xenial.Identity.Models.LoginTypes.Username)
                {
                    <form method="post" class="xenial-form" asp-page-handler="loginUsername">
                        <ul class="xenial-form__list">
                            <li class="xenial-form__list-item">
                                <input type="hidden" asp-for="ReturnUrl" />
                                <label asp-for="LoginUsernameInput.Username">@L["Username"]</label>
                                <input placeholder="@L["Username"]" asp-for="LoginUsernameInput.Username" autofocus>
                                <span asp-validation-for="LoginUsernameInput.Username" class="text-danger"></span>
                            </li>
                            <li class="xenial-form__list-item">
                                <label asp-for="LoginUsernameInput.Password">@L["Password"]</label>
                                <input type="password" placeholder="@L["Password"]" asp-for="LoginUsernameInput.Password" autocomplete="off">
                                <span asp-validation-for="LoginUsernameInput.Password" class="text-danger"></span>
                            </li>
                            <li class="xenial-form__list-item">
                                <label asp-for="LoginUsernameInput.RememberMe">@L["Remember me?"]</label>
                                <input class="toggle" asp-for="LoginUsernameInput.RememberMe">
                                <span asp-validation-for="LoginUsernameInput.RememberMe" class="text-danger"></span>
                            </li>
                            <li class="xenial-form__list-item">
                                <a asp-page="ForgotPassword">@L["Forgot password?"]</a>
                            </li>
                            <li class="xenial-form__list-item">
                                <button class="xenial-form__list-item-submit" name="button" value="login">@L["Login"]</button>
                            </li>
                        </ul>
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    </form>
                }
            </section>
            @if (Model.AllowRegister)
            {
                <section class="login-form">
                    <h2>@L["Register"]</h2>
                    <form method="post" class="xenial-form" asp-page-handler="register">
                        <ul class="xenial-form__list">
                            <li class="xenial-form__list-item">
                                <input type="hidden" asp-for="ReturnUrl" />
                                <label asp-for="RegisterInput.Email">@L["Email"]</label>
                                <input asp-for="RegisterInput.Email" />
                                <span asp-validation-for="RegisterInput.Email" class="text-danger"></span>
                            </li>
                            <li class="xenial-form__list-item">
                                <label asp-for="RegisterInput.Password">@L["Password"]</label>
                                <input asp-for="RegisterInput.Password" />
                                <span asp-validation-for="RegisterInput.Password" class="text-danger"></span>
                            </li>
                            <li class="xenial-form__list-item">
                                <label asp-for="RegisterInput.RegisterConfirmPassword">@L["Confirm password"]</label>
                                <input asp-for="RegisterInput.RegisterConfirmPassword" />
                                <span asp-validation-for="RegisterInput.RegisterConfirmPassword" class="text-danger"></span>
                            </li>
                            <li class="xenial-form__list-item">
                                <button type="submit" class="xenial-form__list-item-submit">@L["Register"]</button>
                            </li>
                        </ul>
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                    </form>
                </section>
            }
        </div>
    </div>
</div>


@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
